version: "3.6"

networks:
  main:

services:
  api:
    hostname: launchpad-api
    image: appliedblockchain/launchpad-api:latest
    build:
      context: .
      dockerfile: ./api/Dockerfile
      args:
        - NPM_TOKEN
    environment:
      - NODE_ENV=staging
      - ETHEREUM_JSONRPC_ENDPOINT=http://3.250.17.70:8545
      # TODO: change Sentry DSN with the correct sentry DSN
      - SENTRY_DSN=http://6f20axxxxxf943f7d@sentry-web:9000/3
      - FORCE_COLOR=1
    networks:
      - main
    ports:
      - 3000:3000
    depends_on:
      - redis
    deploy: &deploy_defaults
      replicas: 3
      update_config:
        parallelism: 1
        delay: 1s
      restart_policy: &restart_policy
        condition: any
        delay: 5s
        max_attempts: 10
        window: 60s

  react:
    hostname: launchpad-react
    image: appliedblockchain/launchpad-react:latest
    build:
      context: ./react
      args:
        - NPM_TOKEN
        - BASIC_AUTH_HTPASSWD=admin:$$apr1$$6SESoef2$$haXLi9RTR.MOe76pJGH8r.
        - TEST_MODE # if set, the react app will be built to use localhost as a backend
    ports:
      - 80:80
    networks:
      - main
    deploy:
      <<: *deploy_defaults
      mode: global
    depends_on:
      - api

  redis:
    hostname: redis
    image: redis:latest
    networks:
    - main
    ports:
      - 6379:6379
    deploy:
      <<: *deploy_defaults
      replicas: 1
      placement:
        constraints:
          - node.labels.node_id == 1

  discovery:
    hostname: discovery
    image: redis:latest
    networks:
    - main
    volumes:
      - redis:/data
    deploy:
      <<: *deploy_defaults
      replicas: 1
      placement:
        constraints:
          - node.labels.node_id == 1

  # logspout:
  #   image: gliderlabs/logspout
  #   deploy:
  #     mode: global
  #   environment:
  #     - SYSLOG_HOST=logs.papertrailapp.com:12345
  #     # NOTE: you have to change the papertrail url with the correct one
  #   command: syslog+tls://$$SYSLOG_HOST
  #   networks:
  #     - main
  #   volumes:
  #     - type: bind
  #       target: /var/run/docker.sock
  #       source: /var/run/docker.sock

volumes:
  redis:
  discovery:
